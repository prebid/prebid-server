// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/prebid/prebid-server/v3/analytics/pubxai/processor (interfaces: ProcessorService)

// Package mocks is a generated GoMock package.
package mocks

import (
	"github.com/prebid/openrtb/v20/openrtb2"
	"github.com/prebid/prebid-server/v3/analytics/pubxai/utils"
	"github.com/stretchr/testify/mock"
)

// MockProcessorService is a mock implementation of ProcessorService interface
type MockProcessorService struct {
	mock.Mock
}

// NewMockProcessorService creates a new instance of MockProcessorService
func NewMockProcessorService() *MockProcessorService {
	return &MockProcessorService{}
}

// ProcessBidData provides a mock function
func (m *MockProcessorService) ProcessBidData(bids []map[string]interface{}, imps map[string]openrtb2.Imp, logObject *utils.LogObject) (*utils.AuctionBids, []utils.WinningBid) {
	args := m.Called(bids, imps, logObject)
	return args.Get(0).(*utils.AuctionBids), args.Get(1).([]utils.WinningBid)
}

// ProcessLogData provides a mock function
func (m *MockProcessorService) ProcessLogData(logObject *utils.LogObject) (*utils.AuctionBids, []utils.WinningBid) {
	args := m.Called(logObject)
	return args.Get(0).(*utils.AuctionBids), args.Get(1).([]utils.WinningBid)
}
