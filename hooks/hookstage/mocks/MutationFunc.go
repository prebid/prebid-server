// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MutationFunc is an autogenerated mock type for the MutationFunc type
type MutationFunc[T any] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *MutationFunc[T]) Execute(_a0 T) (T, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 T
	var r1 error
	if rf, ok := ret.Get(0).(func(T) (T, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(T) T); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(T)
	}

	if rf, ok := ret.Get(1).(func(T) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMutationFunc creates a new instance of MutationFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMutationFunc[T any](t interface {
	mock.TestingT
	Cleanup(func())
}) *MutationFunc[T] {
	mock := &MutationFunc[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
