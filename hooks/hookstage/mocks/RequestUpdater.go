// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	openrtb_ext "github.com/prebid/prebid-server/v3/openrtb_ext"
	mock "github.com/stretchr/testify/mock"
)

// RequestUpdater is an autogenerated mock type for the RequestUpdater type
type RequestUpdater struct {
	mock.Mock
}

// GetBidderRequestPayload provides a mock function with given fields:
func (_m *RequestUpdater) GetBidderRequestPayload() *openrtb_ext.RequestWrapper {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetBidderRequestPayload")
	}

	var r0 *openrtb_ext.RequestWrapper
	if rf, ok := ret.Get(0).(func() *openrtb_ext.RequestWrapper); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*openrtb_ext.RequestWrapper)
		}
	}

	return r0
}

// SetBidderRequestPayload provides a mock function with given fields: br
func (_m *RequestUpdater) SetBidderRequestPayload(br *openrtb_ext.RequestWrapper) {
	_m.Called(br)
}

// NewRequestUpdater creates a new instance of RequestUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRequestUpdater(t interface {
	mock.TestingT
	Cleanup(func())
}) *RequestUpdater {
	mock := &RequestUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
