{
    "mockBidRequest": {
      "id": "some-request-id",
      "device": {
        "ua": "test-user-agent",
        "ip": "123.123.123.123",
        "language": "en",
        "dnt": 0
      },
      "tmax": 500,
      "user": {
        "buyeruid": "some-user"
      },
      "app": {
        "publisher": {
          "id": "123456789"
        },
        "cat": [
          "IAB22-1"
        ],
        "bundle": "com.app.awesome",
        "name": "Awesome App",
        "domain": "awesomeapp.com",
        "id": "123456789"
      },
      "imp": [
        {
          "id": "some-imp-id",
          "tagid": "some-tag-id",
          "banner": {
            "format":[
              {
                "w": 320,
                "h": 50
              }
            ]
          },
          "ext": {
            "bidder": {
              "placementId": "some-placement-id"
            }
          }
        }
      ]
    },
    "httpCalls": [
      {
        "expectedRequest": {
          "uri": "http://example.com",
          "body": {
            "id": "some-request-id",
            "device": {
              "ua": "test-user-agent",
              "ip": "123.123.123.123",
              "language": "en",
              "dnt": 0
            },
            "imp": [
              {
                "id": "some-imp-id",
                "tagid": "some-tag-id",
                "banner": {
                  "w": 320,
                  "h": 50,
                  "format": [
                    {
                      "w": 320,
                      "h": 50
                    }
                  ]
                },
                "ext": {
                  "connatix": {
                    "placementId": "some-placement-id"
                  }
                }
              }
            ],
            "app": {
              "id": "123456789",
              "name": "Awesome App",
              "bundle": "com.app.awesome",
              "domain": "awesomeapp.com",
              "cat": [
                "IAB22-1"
              ],
              "publisher": {
                "id": "123456789"
              }
            },
            "user": {
              "buyeruid": "some-user"
            },
            "tmax": 500
          },
          "impIDs": [
            "some-imp-id"
          ]
        },
        "mockResponse": {
          "status": 200,
          "body": {
            "id": "some-response-id",
            "seatbid": {}
          }
        }
      }
    ],
    "expectedBidResponses": [],
    "expectedMakeBidsErrors": [
        {
            "value": "cannot unmarshal openrtb2.BidResponse.SeatBid: decode slice: expect [ or n, but found {",
            "comparison": "literal"
        }
    ]
  }